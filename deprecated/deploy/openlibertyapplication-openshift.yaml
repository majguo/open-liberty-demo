apiVersion: openliberty.io/v1beta1
kind: OpenLibertyApplication
metadata:
  name: javaee-cafe
spec:
  replicas: 1
  applicationImage: ${APPLICATION_IMAGE}
  pullPolicy: Always
  expose: true
  serviceAccountName: ${SERVICE_ACCOUNT_NAME}
  service:
    port: 9443
    ports:
    - port: 9080
      targetPort: 9080
    certificate:
      issuerRef:
        name: ${CLUSTER_ISSUER_NAME}
        kind: ClusterIssuer
  route:
    termination: reencrypt
    certificate:
      issuerRef:
        name: ${CLUSTER_ISSUER_NAME}
        kind: ClusterIssuer
  env:
  - name: SEC_TLS_TRUSTDEFAULTCERTS
    value: 'true'
  - name: SEC_IMPORT_K8S_CERTS
    value: 'true'
  - name: WLP_LOGGING_CONSOLE_FORMAT
    value: SIMPLE
  - name: POSTGRESQL_SERVER_NAME
    valueFrom:
      secretKeyRef:
        name: postgresql-secret
        key: postgresql.server.name
  - name: POSTGRESQL_USER
    valueFrom:
      secretKeyRef:
        name: postgresql-secret
        key: postgresql.user
  - name: POSTGRESQL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgresql-secret
        key: postgresql.password
  - name: TENANT_ID
    valueFrom:
      secretKeyRef:
        name: aad-oidc-secret
        key: tenant.id
  - name: CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: aad-oidc-secret
        key: client.id
  - name: CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: aad-oidc-secret
        key: client.secret
  volumeMounts:
  - name: logs-volume
    mountPath: /logs
  volumes:
  - name: logs-volume
    emptyDir: {}
  - name: config
    configMap:
      defaultMode: 0600
      name: filebeat-config
  sidecarContainers:
  - name: filebeat
    image: docker.elastic.co/beats/filebeat:7.6.2
    args: [
      "-c", "/etc/filebeat.yml",
      "-e",
    ]
    securityContext:
      runAsUser: 0
      privileged: true
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
    env:
    - name: ELASTIC_CLOUD_ID
      valueFrom:
        secretKeyRef:
          name: elastic-cloud-secret
          key: elastic.cloud.id
    - name: ELASTIC_CLOUD_AUTH
      valueFrom:
        secretKeyRef:
          name: elastic-cloud-secret
          key: elastic.cloud.auth
    volumeMounts:
    - name: config
      mountPath: /etc/filebeat.yml
      readOnly: true
      subPath: filebeat.yml
    - name: logs-volume
      mountPath: /logs
      readOnly: true
